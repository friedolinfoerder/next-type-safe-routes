import { ApiRoute, Page } from "./types";

const getParam = (param: string) => `"${param}": string | number`;

const getTypeSafeRoute = ({
  route,
  params,
  isCatchAllRoute,
  isOptionalCatchAllRoute,
}: ApiRoute) => {
  if (!params?.length) {
    if (isOptionalCatchAllRoute) {
      return `"${route}" | { route: "${route}", path?: string, query?: Query }`;
    } else if (isCatchAllRoute) {
      return `{ route: "${route}", path: string, query?: Query }`;
    } else {
      return `"${route}" | { route: "${route}", query?: Query }`;
    }
  } else {
    const paramsString = params.map(getParam).join(",");
    if (isOptionalCatchAllRoute) {
      return `"${route}" | { route: "${route}", path?: string, params: { ${paramsString} }, query?: Query }`;
    } else if (isCatchAllRoute) {
      return `{ route: "${route}", path: string, params: { ${paramsString} }, query?: Query }`;
    } else {
      return `{ route: "${route}", params: { ${paramsString} }, query?: Query }`;
    }
  }
};

type Args = {
  apiRoutes: ApiRoute[];
  pages: Page[];
};

const getFileContent = ({
  apiRoutes,
  pages,
}: Args) => `// IMPORTANT! This file is autogenerated by the \`@steuerbot/type-safe-next-routes\` 
// package. You should _not_ update these types manually...

type Query = { [key: string]: any };
export type TypeSafePage = ${pages.map(getTypeSafeRoute).join(" | ")};
`;

export default getFileContent;
